;#include <tiny2313.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x50
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_standby=0x40
;PCODE: $00000006 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000007 VOL: 0
	#endif
;PCODE: $00000008 VOL: 0
;PCODE: $00000009 VOL: 0
;#include <delay.h>
;#include <stdio.h>
;#include "project.h"
;
;char currentLightState = 0;
;char linkDetectedTimeout = 0;
;char buttonPressed = 0;
;
;static char tenths = 0;
;
;#define BUTTON PIND.2
;#define LED_POWER PORTB.0
;#define LED_LINK PORTB.1
;#define LED_LIGHTS PORTB.2
;
;#define LED_ON 1
;#define LED_OFF 0
;
;void SetLightState(char lightState)
; 0003 0015 {

	.CSEG
;PCODE: $0000000A VOL: 0
;PCODE: $0000000B VOL: 0
; 0003 0016     currentLightState = lightState;
;	lightState -> Y+0
;PCODE: $0000000C VOL: 0
;PCODE: $0000000D VOL: 0
; 0003 0017 }
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;
;void LinkDetected()
; 0003 001A {
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0003 001B     linkDetectedTimeout = 20;  // 10 seconds
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0003 001C }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;
;void SendString(char flash *string)
; 0003 001F {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0003 0020     while (*string != 0)
;	*string -> Y+0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0003 0021     {
; 0003 0022         putchar(*string);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0003 0023         string++;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0003 0024     }
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0003 0025 }
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0003 0029 {
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0003 002A         // Reinitialize Timer1 value
; 0003 002B     TCNT1H=0xF3CA >> 8;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0003 002C     TCNT1L=0xF3CA & 0xff;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0003 002D 
; 0003 002E     if (linkDetectedTimeout > 0)
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0003 002F     {
; 0003 0030         linkDetectedTimeout--;
;PCODE: $00000033 VOL: 0
; 0003 0031         LED_LINK = LED_ON;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0003 0032     }
; 0003 0033     else
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0003 0034     {
; 0003 0035         LED_LINK = LED_OFF;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0003 0036         LED_LIGHTS = LED_OFF;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0003 0037         currentLightState = 0;
;PCODE: $0000003C VOL: 0
; 0003 0038     }
;PCODE: $0000003D VOL: 0
; 0003 0039 
; 0003 003A     if (currentLightState == 1)
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0003 003B     {
; 0003 003C         LED_LIGHTS = LED_ON;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0003 003D     }
; 0003 003E     else
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0003 003F     {
; 0003 0040         LED_LIGHTS = LED_OFF;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0003 0041     }
;PCODE: $00000047 VOL: 0
; 0003 0042 
; 0003 0043     if (BUTTON == 0)
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0003 0044     {
; 0003 0045         if (!buttonPressed)
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0003 0046         {
; 0003 0047             buttonPressed = 1;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0003 0048             if (currentLightState == 1)
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0003 0049             {
; 0003 004A                 SendString("S0");
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0003 004B             }
; 0003 004C             else
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0003 004D             {
; 0003 004E                 SendString("S1");
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0003 004F             }
;PCODE: $0000005C VOL: 0
; 0003 0050         }
; 0003 0051     }
;PCODE: $0000005D VOL: 0
; 0003 0052     else
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0003 0053     {
; 0003 0054         buttonPressed = 0;
;PCODE: $00000060 VOL: 0
; 0003 0055     }
;PCODE: $00000061 VOL: 0
; 0003 0056 
; 0003 0057     tenths++;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0003 0058     if (tenths == 10)
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0003 0059     {
; 0003 005A         tenths = 0;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0003 005B         LED_POWER = LED_ON;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0003 005C     }
; 0003 005D     else
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0003 005E     {
; 0003 005F         LED_POWER = LED_OFF;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0003 0060     }
;PCODE: $00000070 VOL: 0
; 0003 0061 }
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
